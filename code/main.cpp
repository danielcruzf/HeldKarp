#include "tomatrix.h"
#include "heldkarptsp.h"
#include <iostream>
#include <vector>
#include <math.h>

using namespace std;

int main() {
    vector<double> 
    dist = {0.     , 0.2448 , 0.52   , 0.1981 , 0.8696 , 0.3523 , 0.843  ,
       0.3447 , 0.617  , 0.588  , 0.7544 , 0.2053 , 0.523  , 0.557  ,
       1.072  , 0.586  , 0.643  , 0.4597 , 0.2319 , 0.4373 , 0.2448 ,
       0.     , 0.356  , 0.1713 , 0.7407 , 0.1737 , 0.712  , 0.2288 ,
       0.3723 , 0.508  , 0.54   , 0.188  , 0.3733 , 0.3123 , 1.012  ,
       0.654  , 0.7197 , 0.2168 , 0.1577 , 0.1942 , 0.52   , 0.356  ,
       0.     , 0.3242 , 0.3872 , 0.1836 , 0.3584 , 0.563  , 0.366  ,
       0.2242 , 0.273  , 0.3213 , 0.03513, 0.34   , 0.692  , 0.5386 ,
       0.6016 , 0.2776 , 0.513  , 0.3464 , 0.1981 , 0.1713 , 0.3242 ,
       0.     , 0.6733 , 0.1731 , 0.646  , 0.3838 , 0.4922 , 0.4    ,
       0.572  , 0.01718, 0.3252 , 0.4358 , 0.897  , 0.4858 , 0.5513 ,
       0.331  , 0.2847 , 0.3398 , 0.8696 , 0.7407 , 0.3872 , 0.6733 ,
       0.     , 0.567  , 0.02869, 0.9497 , 0.6743 , 0.299  , 0.396  ,
       0.6646 , 0.3674 , 0.6743 , 0.3665 , 0.602  , 0.6377 , 0.645  ,
       0.8984 , 0.7188 , 0.3523 , 0.1737 , 0.1836 , 0.1731 , 0.567  ,
       0.     , 0.5386 , 0.3916 , 0.339  , 0.346  , 0.4026 , 0.1781 ,
       0.1996 , 0.2886 , 0.846  , 0.559  , 0.6265 , 0.1881 , 0.3313 ,
       0.228  , 0.843  , 0.712  , 0.3584 , 0.646  , 0.02869, 0.5386 ,
       0.     , 0.921  , 0.648  , 0.2766 , 0.3743 , 0.6377 , 0.3389 ,
       0.647  , 0.3872 , 0.59   , 0.6274 , 0.6167 , 0.8696 , 0.6904 ,
       0.3447 , 0.2288 , 0.563  , 0.3838 , 0.9497 , 0.3916 , 0.921  ,
       0.     , 0.429  , 0.7344 , 0.6875 , 0.401  , 0.586  , 0.3777 ,
       1.237  , 0.8687 , 0.9326 , 0.333  , 0.11365, 0.2637 , 0.617  ,
       0.3723 , 0.366  , 0.4922 , 0.6743 , 0.339  , 0.648  , 0.429  ,
       0.     , 0.59   , 0.3096 , 0.503  , 0.4011 , 0.06015, 1.024  ,
       0.882  , 0.9478 , 0.1619 , 0.461  , 0.1854 , 0.588  , 0.508  ,
       0.2242 , 0.4    , 0.299  , 0.346  , 0.2766 , 0.7344 , 0.59   ,
       0.     , 0.435  , 0.388  , 0.1892 , 0.5635 , 0.5044 , 0.3591 ,
       0.4133 , 0.4927 , 0.66   , 0.555  , 0.7544 , 0.54   , 0.273  ,
       0.572  , 0.396  , 0.4026 , 0.3743 , 0.6875 , 0.3096 , 0.435  ,
       0.     , 0.573  , 0.2944 , 0.332  , 0.761  , 0.788  , 0.846  ,
       0.3547 , 0.679  , 0.4246 , 0.2053 , 0.188  , 0.3213 , 0.01718,
       0.6646 , 0.1781 , 0.6377 , 0.401  , 0.503  , 0.388  , 0.573  ,
       0.     , 0.3206 , 0.447  , 0.8833 , 0.4688 , 0.5337 , 0.342  ,
       0.3015 , 0.3535 , 0.523  , 0.3733 , 0.03513, 0.3252 , 0.3674 ,
       0.1996 , 0.3389 , 0.586  , 0.4011 , 0.1892 , 0.2944 , 0.3206 ,
       0.     , 0.3748 , 0.662  , 0.5073 , 0.57   , 0.3096 , 0.531  ,
       0.377  , 0.557  , 0.3123 , 0.34   , 0.4358 , 0.6743 , 0.2886 ,
       0.647  , 0.3777 , 0.06015, 0.5635 , 0.332  , 0.447  , 0.3748 ,
       0.     , 1.016  , 0.84   , 0.9062 , 0.10486, 0.4033 , 0.1262 ,
       1.072  , 1.012  , 0.692  , 0.897  , 0.3665 , 0.846  , 0.3872 ,
       1.237  , 1.024  , 0.5044 , 0.761  , 0.8833 , 0.662  , 1.016  ,
       0.     , 0.599  , 0.5957 , 0.9683 , 1.164  , 1.038  , 0.586  ,
       0.654  , 0.5386 , 0.4858 , 0.602  , 0.559  , 0.59   , 0.8687 ,
       0.882  , 0.3591 , 0.788  , 0.4688 , 0.5073 , 0.84   , 0.599  ,
       0.     , 0.06714, 0.7456 , 0.764  , 0.7856 , 0.643  , 0.7197 ,
       0.6016 , 0.5513 , 0.6377 , 0.6265 , 0.6274 , 0.9326 , 0.9478 ,
       0.4133 , 0.846  , 0.5337 , 0.57   , 0.9062 , 0.5957 , 0.06714,
       0.     , 0.8125 , 0.827  , 0.8525 , 0.4597 , 0.2168 , 0.2776 ,
       0.331  , 0.645  , 0.1881 , 0.6167 , 0.333  , 0.1619 , 0.4927 ,
       0.3547 , 0.342  , 0.3096 , 0.10486, 0.9683 , 0.7456 , 0.8125 ,
       0.     , 0.3313 , 0.0749 , 0.2319 , 0.1577 , 0.513  , 0.2847 ,
       0.8984 , 0.3313 , 0.8696 , 0.11365, 0.461  , 0.66   , 0.679  ,
       0.3015 , 0.531  , 0.4033 , 1.164  , 0.764  , 0.827  , 0.3313 ,
       0.     , 0.2776 , 0.4373 , 0.1942 , 0.3464 , 0.3398 , 0.7188 ,
       0.228  , 0.6904 , 0.2637 , 0.1854 , 0.555  , 0.4246 , 0.3535 ,
       0.377  , 0.1262 , 1.038  , 0.7856 , 0.8525 , 0.0749 , 0.2776 ,
       0.     };
    int size = sqrt(dist.size());
    auto distance = tomatrix(dist, size);
    cout << "Distance matrix:" << endl << endl;
    for (auto v  : distance) {
        for (auto u : v) {
            cout << u << "  ";
        }
        cout << endl;
    }

    auto result = HeldKarp(distance);

    cout << endl << endl << "REULT:" << endl;
    cout << "Distance: " << result.first << endl;
    cout << "Path: "; 
        for (auto node : result.second) {
        cout << node << " ";
    cout << endl;
    }
    return 0;
}